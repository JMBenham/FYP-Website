# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-09-10 14:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('imageUrl', models.CharField(default='https://upload.wikimedia.org/wikipedia/commons/3/33/White_square_with_question_mark.png', max_length=300)),
            ],
            options={
                'verbose_name_plural': 'Hardware',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('VIC', 'Victoria'), ('ACT', 'Australian Capital Territory'), ('NSW', 'New South Wales'), ('QLD', 'Queensland'), ('WA', 'Western Australia'), ('SA', 'South Australia'), ('NT', 'Northern Territory'), ('TAS', 'Tasmania')], default='VIC', max_length=3)),
                ('yearLevels', multiselectfield.db.fields.MultiSelectField(choices=[(0, 'Prep'), (1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5'), (6, 'Grade 6'), (7, 'Year 7'), (8, 'Year 8'), (9, 'Year 9'), (10, 'Year 10'), (11, 'Year 11'), (12, 'Year 12')], max_length=28, null=True)),
                ('classSize', models.IntegerField(choices=[(1, '0-5'), (2, '6-10'), (3, '11-15'), (4, '16-20'), (5, '21-25'), (6, '25+')], null=True)),
                ('technologyBackground', models.IntegerField(choices=[(1, 'I never use technology (e.g. Only touch a computer when required)'), (2, 'Novice (e.g. Only use it to send emails and browse the internet)'), (3, 'Intermediate (e.g. Can confidently use technology most of the time without assistance)'), (4, 'Expert (e.g. Most of the time people come to you as the person to ask with their technology issues)')], default=1)),
                ('programmingBackground', models.IntegerField(choices=[(1, 'I have never programmed before (e.g. Only touch a computer when required)'), (2, 'Some programming (e.g. I have written some programs to carry out simple tasks)'), (3, 'Experienced programmer (e.g. I have used programs for computation, automation)'), (4, 'Expert programmer (e.g. I have worked as a programmer before, contributed code to large projects and/or coded for high level algorithmic computation)')], default=1)),
                ('hardware_devices', models.ManyToManyField(blank=True, to='website.Hardware')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('text', 'text'), ('radio', 'radio')], default='radio', max_length=200)),
                ('question', models.CharField(default='TODO', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='hardware', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hardware', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Hardware')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Questionnaire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerRadio',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='website.Answer')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('website.answer',),
        ),
        migrations.CreateModel(
            name='AnswerText',
            fields=[
                ('answer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='website.Answer')),
                ('body', models.TextField(blank=True, null=True)),
            ],
            bases=('website.answer',),
        ),
        migrations.AddField(
            model_name='question',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Questionnaire'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Category'),
        ),
        migrations.AddField(
            model_name='profile',
            name='subjectsTaught',
            field=models.ManyToManyField(blank=True, to='website.Subject'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Questionnaire'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='response',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Response'),
        ),
    ]
